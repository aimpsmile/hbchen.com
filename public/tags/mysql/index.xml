<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mysql on Hobo&#39;s Blog - 在路上~永不停止的脚步</title>
    <link>http://hbchen.com/tags/mysql/</link>
    <description>Recent content in Mysql on Hobo&#39;s Blog - 在路上~永不停止的脚步</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>HB Studio</copyright>
    <lastBuildDate>Thu, 07 Nov 2013 18:36:00 +0800</lastBuildDate>
    
        <atom:link href="http://hbchen.com/tags/mysql/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>MySql:优化工具</title>
      <link>http://hbchen.com/post/2013-11-07-mysql-you-hua-gong-ju/</link>
      <pubDate>Thu, 07 Nov 2013 18:36:00 +0800</pubDate>
      
      <guid>http://hbchen.com/post/2013-11-07-mysql-you-hua-gong-ju/</guid>
      
        <description>&lt;p&gt;脚本优化tuning-primer.sh&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#cd /etc/   (my.conf所在目录)
#wget http://www.day32.com/MySQL/tuning-primer.sh
#chmod +x tuning-primer.sh
#./tuning-primer.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;优化工具Mysqltuner&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;安装：
#yum install -y mysqltuner
运行：
#mysqltuner
&lt;/code&gt;&lt;/pre&gt;</description>
      
    </item>
    
    <item>
      <title>MySQL:常用命令行</title>
      <link>http://hbchen.com/post/2013-10-30-mysql-chang-yong-ming-ling-xing/</link>
      <pubDate>Wed, 30 Oct 2013 08:58:00 +0800</pubDate>
      
      <guid>http://hbchen.com/post/2013-10-30-mysql-chang-yong-ming-ling-xing/</guid>
      
        <description>&lt;h4 id=&#34;登入&#34;&gt;登入&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;mysql -h192.168.1.110  -uroot -ppassword
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;登出&#34;&gt;登出&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;quit/exit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h4 id=&#34;查看数据库&#34;&gt;查看数据库&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;show databases;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;用户权限&#34;&gt;用户权限&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;#添加
grant select on db.table to &#39;user&#39;@&#39;host&#39;;
grant select,update on *.* to &#39;test&#39;@&#39;%&#39;;
#撤销
revoke all on *.* from &#39;test&#39;@&#39;%&#39;;
#查看
show grants;
show grants for user@localhost
 
#删除用户
delete from mysql.user where user=&#39;&#39; and host=&#39;&#39;;

#设置密码
update mysql.user set password=PASSWORD(&#39;123456&#39;) where user=&#39;root&#39;;
 
#配置远程连接
GRANT ALL PRIVILEGES ON *.* TO &#39;root&#39;@&#39;%&#39; IDENTIFIED BY &#39;password&#39; WITH GRANT OPTION; 
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;导出&#34;&gt;导出&lt;/h4&gt;

&lt;p&gt;mysqldump -u　用户名 -p 数据库名 &amp;gt; 数据库名.sql&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mysqldump -u　root -p dbname &amp;gt; filepath.sql  
#To export tofile(data only)
mysqldump -u [user]-p[pass]--no-create-db --no-create-info mydb &amp;gt; mydb.sql
#To export tofile(structure only)
mysqldump -u [user]-p[pass]--no-data mydb &amp;gt; mydb.sql
#To import todatabase
mysql -u [user]-p[pass] mydb &amp;lt; mydb.sql
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;导入&#34;&gt;导入&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;mysql&amp;gt; use dbname             #切到要导入的数据库
mysql&amp;gt; source filepath.sql
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;变量查看-修改&#34;&gt;变量查看/修改&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;show variables like &#39;%slow%&#39;;
set global slow_query_log= &#39;ON&#39;;

show status like &#39;Qca%&#39;;
 
#查看SQL中select条数
show status like &#39;Com_sel%&#39;; #显示的是一次会话的值！
show global status like &amp;quot;Com_select&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;找回密码&#34;&gt;找回密码？&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;1、kill -TERM mysqld
2、conf中加入skip-grant-tables
3、service mysqld restart
4、mysql -uroot -p
5、修改密码
6、改回原配置并重启
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;binlog-http-dev-mysql-com-doc-refman-5-7-en-mysqlbinlog-html&#34;&gt;&lt;a href=&#34;http://dev.mysql.com/doc/refman/5.7/en/mysqlbinlog.html&#34;&gt;Binlog&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;&lt;a href=&#34;http://dev.mysql.com/doc/refman/5.7/en/purge-binary-logs.html&#34;&gt;删除mysql-bin日志&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;PURGE BINARY LOGS TO &#39;mysql-bin.010&#39;;
PURGE BINARY LOGS BEFORE &#39;2008-04-02 22:46:26&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;清空表并使自增归0&#34;&gt;清空表并使自增归0&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;TRUNCATE TABLE tablename
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;mac无法登陆&#34;&gt;Mac无法登陆&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;Can&#39;t connect to MySQL server on &#39;127.0.0.1&#39; (61)
StevenMacBookAir:~ Hobo$ sudo su -
StevenMacBookAir:~ root# nohup /usr/local/mysql/bin/mysqld_safe &amp;amp;
[1] 464
StevenMacBookAir:~ root# appending output to nohup.out
exit
logout
StevenMacBookAir:~ Hobo$ 
&lt;/code&gt;&lt;/pre&gt;</description>
      
    </item>
    
    <item>
      <title>Go-Revel:Gorp连接MySQL</title>
      <link>http://hbchen.com/post/2013-08-24-go-revel-gorplian-jie-mysql/</link>
      <pubDate>Sat, 24 Aug 2013 09:22:00 +0800</pubDate>
      
      <guid>http://hbchen.com/post/2013-08-24-go-revel-gorplian-jie-mysql/</guid>
      
        <description>&lt;p&gt;Revel连接数据库可以参考官方的Booking示例&lt;/p&gt;

&lt;p&gt;除了Revel需要Gorp和MySQL驱动两个库&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;#Gorp
go get github.com/coopernurse/gorp

#MySQL驱动
go get github.com/go-sql-driver/mysql  #也可以用其他的驱动库
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建一个新的Revel工程app_name&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;配置conf/app.conf&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# DB username:@tcp(yourhost:port)/dbname
db.import = github.com/Go-SQL-Driver/mysql
db.driver = mysql
db.spec   = root:@tcp(localhost:3306)/db_name
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建models/user.go，先只定义几个测试字段&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package models

type User struct {
	UserId							int
	Name               	string
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建controllers/init.go&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package controllers

import &amp;quot;github.com/robfig/revel&amp;quot;

func init() {
	revel.OnAppStart(Init)
	revel.InterceptMethod((*GorpController).Begin, revel.BEFORE)
	revel.InterceptMethod((*GorpController).Commit, revel.AFTER)
	revel.InterceptMethod((*GorpController).Rollback, revel.FINALLY)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建controllers/gorp.go&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;package controllers

import (
	&amp;quot;database/sql&amp;quot;
	&amp;quot;github.com/coopernurse/gorp&amp;quot;
	_ &amp;quot;github.com/Go-SQL-Driver/mysql&amp;quot;
	r &amp;quot;github.com/robfig/revel&amp;quot;
	&amp;quot;github.com/robfig/revel/modules/db/app&amp;quot;
	&amp;quot;app_name/app/models&amp;quot;
)

var (
	Dbm *gorp.DbMap
)

func Init() {
	db.Init()
	//MySQL InnoDB UTF8
	Dbm = &amp;amp;gorp.DbMap{Db: db.Db, Dialect: gorp.MySQLDialect{&amp;quot;InnoDB&amp;quot;, &amp;quot;UTF8&amp;quot;}}

	setColumnSizes := func(t *gorp.TableMap, colSizes map[string]int) {
		for col, size := range colSizes {
			t.ColMap(col).MaxSize = size
		}
	}

	//创建一个User测试表
	t := Dbm.AddTable(models.User{}).SetKeys(true, &amp;quot;UserId&amp;quot;)
	setColumnSizes(t, map[string]int{
		&amp;quot;Name&amp;quot;: 20,
	})

	Dbm.TraceOn(&amp;quot;[gorp]&amp;quot;, r.INFO)
	Dbm.CreateTables()

	//插入一组测试数据
	demoUser := &amp;amp;models.User{0, &amp;quot;Hobo&amp;quot;}
	if err := Dbm.Insert(demoUser); err != nil {
		panic(err)
	}

}

type GorpController struct {
	*r.Controller
	Txn *gorp.Transaction
}

func (c *GorpController) Begin() r.Result {
	txn, err := Dbm.Begin()
	if err != nil {
		panic(err)
	}
	c.Txn = txn
	return nil
}

func (c *GorpController) Commit() r.Result {
	if c.Txn == nil {
		return nil
	}
	if err := c.Txn.Commit(); err != nil &amp;amp;&amp;amp; err != sql.ErrTxDone {
		panic(err)
	}
	c.Txn = nil
	return nil
}

func (c *GorpController) Rollback() r.Result {
	if c.Txn == nil {
		return nil
	}
	if err := c.Txn.Rollback(); err != nil &amp;amp;&amp;amp; err != sql.ErrTxDone {
		panic(err)
	}
	c.Txn = nil
	return nil
}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改controllers/app.go&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;#import添加
&amp;quot;app_name/app/models&amp;quot;

#包含GorpController
type App struct {
	GorpController
}

#测试查询
func (c App) Index() revel.Result {
	greeting := &amp;quot;It works!&amp;quot;

	users, err := c.Txn.Select(models.User{}, `select * from user where Name=&amp;quot;Hobo&amp;quot;`)
	if len(users) == 0 {
		greeting = &amp;quot;Null&amp;quot;
	} else {
		user := users[0].(*models.User)
		greeting = user.Name
	}
	if err != nil {
		panic(err)
	}
	return c.Render(greeting)
}

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;修改views/App/Index.html&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#&amp;lt;h1&amp;gt;It works&amp;lt;/h1&amp;gt;
&amp;lt;h1&amp;gt;/{/{.greeting/}/}&amp;lt;/h1&amp;gt;		#去掉反斜杠
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;运行测试下&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;go run app_name
&lt;/code&gt;&lt;/pre&gt;</description>
      
    </item>
    
  </channel>
</rss>