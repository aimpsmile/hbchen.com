<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Archives on Jane - A super concise theme for Hugo</title>
    <link>http://localhost:1313/archives/</link>
    <description>Recent content in Archives on Jane - A super concise theme for Hugo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 17 Oct 2014 16:18:00 +0800</lastBuildDate>
    
        <atom:link href="http://localhost:1313/archives/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Centos VSFTP配置</title>
      <link>http://localhost:1313/archives/2014-10-17-centos-vsftp/</link>
      <pubDate>Fri, 17 Oct 2014 16:18:00 +0800</pubDate>
      
      <guid>http://localhost:1313/archives/2014-10-17-centos-vsftp/</guid>
      
        <description>&lt;p&gt;安装
{% codeblock lang:ruby %}
yum install vsftp
{% endcodeblock %}&lt;/p&gt;

&lt;p&gt;配置
{% codeblock /etc/vsftpd/vsftpd.conf lang:ruby %}
关闭匿名登录
#anonymous_enable=NO&lt;/p&gt;

&lt;p&gt;user_list中的说明是userlist_deny
#userlist_enable=NO&lt;/p&gt;

&lt;p&gt;FTP root
#local_root=/mnt/ftp&lt;/p&gt;

&lt;p&gt;{% endcodeblock %}&lt;/p&gt;

&lt;p&gt;添加登录用户
{% codeblock lang:ruby %}
添加用户
#useradd Hobo
设置密码
#passwd Hobo
加入user_list
#echo Hobo &amp;gt;&amp;gt; /etc/vsftpd/user_list
{% endcodeblock %}&lt;/p&gt;

&lt;p&gt;重启
{% codeblock lang:ruby %}
#service vsftpd restart
{% endcodeblock %}&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>MySQL Backup</title>
      <link>http://localhost:1313/archives/2014-10-17-mysql-backup/</link>
      <pubDate>Fri, 17 Oct 2014 14:04:00 +0800</pubDate>
      
      <guid>http://localhost:1313/archives/2014-10-17-mysql-backup/</guid>
      
        <description>&lt;p&gt;MySQL备份脚本，支持mysqldump,mysqlhotcopy,tar三种方式，+定时任务自动备份。&lt;/p&gt;

&lt;p&gt;Gist
&lt;a href=&#34;https://gist.github.com/Hobo86/effd4b45b50f576bf4d1&#34;&gt;https://gist.github.com/Hobo86/effd4b45b50f576bf4d1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;{% codeblock crontab lang:ruby %}
脚本属性设为可执行
#chmod +x mysql_backup.sh&lt;/p&gt;

&lt;p&gt;编辑定时任务
#vi /etc/crontab&lt;/p&gt;

&lt;p&gt;如：每天03:01执行备份脚本
01 3 * * * root /usr/sbin/mysql_backup.sh&lt;/p&gt;

&lt;p&gt;重启定时任务&lt;/p&gt;

&lt;h1 id=&#34;etc-rc-d-init-d-crond-restart&#34;&gt;/etc/rc.d/init.d/crond restart&lt;/h1&gt;

&lt;p&gt;{% endcodeblock %}&lt;/p&gt;

&lt;p&gt;
Gist
&lt;a href=&#34;https://gist.github.com/Hobo86/29b27d361a4c59545348&#34;&gt;https://gist.github.com/Hobo86/29b27d361a4c59545348&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;{% codeblock mysql_backup.sh lang:ruby %}
#!/bin/bash&lt;/p&gt;

&lt;p&gt;DBName=db_name&lt;/p&gt;

&lt;p&gt;DBUser=root&lt;/p&gt;

&lt;p&gt;DBPasswd=123456&lt;/p&gt;

&lt;p&gt;BackupPath=/mnt/backup/&lt;/p&gt;

&lt;p&gt;LogFile=/mnt/backup/db_name.log&lt;/p&gt;

&lt;p&gt;DBPath=/mnt/mysql/&lt;/p&gt;

&lt;p&gt;BackupMethod=mysqldump&lt;/p&gt;

&lt;p&gt;#BackupMethod=mysqlhotcopy&lt;/p&gt;

&lt;p&gt;#BackupMethod=tar&lt;/p&gt;

&lt;p&gt;NewFile=&amp;ldquo;$BackupPath&amp;rdquo;db&lt;em&gt;name&lt;/em&gt;$(date +%y%m%d).tgz&lt;/p&gt;

&lt;p&gt;DumpFile=&amp;ldquo;$BackupPath&amp;rdquo;db&lt;em&gt;name&lt;/em&gt;$(date +%y%m%d)&lt;/p&gt;

&lt;p&gt;OldFile=&amp;ldquo;$BackupPath&amp;rdquo;db&lt;em&gt;name&lt;/em&gt;$(date +%y%m%d &amp;ndash;date=&amp;lsquo;5 days ago&amp;rsquo;).tgz&lt;/p&gt;

&lt;p&gt;#SettingEnd&lt;/p&gt;

&lt;p&gt;echo &amp;ldquo;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-&amp;rdquo;&amp;gt;&amp;gt;$LogFile
echo $(date +%Y-%m-%d%t%H:%M:%S)&amp;gt;&amp;gt;$LogFile&lt;/p&gt;

&lt;p&gt;echo &amp;ldquo;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;ndash;&amp;rdquo;&amp;gt;&amp;gt;$LogFile&lt;/p&gt;

&lt;p&gt;#DeleteOldFile
if [ -f $OldFile ]
    then
        rm -f $OldFile&amp;gt;&amp;gt;$LogFile 2&amp;gt;&amp;amp;1
        echo &amp;ldquo;[$OldFile]DeleteOldFileSuccess!&amp;ldquo;&amp;gt;&amp;gt;$LogFile
    else
        echo &amp;ldquo;[$OldFile]NoOldBackupFile!&amp;ldquo;&amp;gt;&amp;gt;$LogFile
fi&lt;/p&gt;

&lt;p&gt;if [ -f $NewFile ]
    then
        echo &amp;ldquo;[$NewFile]TheBackupFileisexists,Can&amp;rsquo;tBackup!&amp;ldquo;&amp;gt;&amp;gt;$LogFile
    else
        case $BackupMethod in
        mysqldump)
            if [ -z $DBPasswd ]
                then
                    mysqldump -u$DBUser &amp;ndash;opt $DBName&amp;gt;$DumpFile
                else
                    mysqldump -u$DBUser -p$DBPasswd &amp;ndash;opt $DBName&amp;gt;$DumpFile
            fi&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;        tar czvf $NewFile $DumpFile&amp;gt;&amp;gt;$LogFile 2&amp;gt;&amp;amp;1
        echo &amp;quot;[$NewFile]BackupSuccess!&amp;quot;&amp;gt;&amp;gt;$LogFile
        rm -rf $DumpFile
    ;;

    mysqlhotcopy)
        rm -rf $DumpFile
        mkdir $DumpFile

        if [ -z $DBPasswd ] 
            then
                mysqlhotcopy -u$DBUser $DBName $DumpFile&amp;gt;&amp;gt;$LogFile 2&amp;gt;&amp;amp;1
            else
                mysqlhotcopy -u$DBUser -p$DBPasswd $DBName $DumpFile&amp;gt;&amp;gt;$LogFile2&amp;gt;&amp;amp;1
        fi

        tar czvf $NewFile $DumpFile&amp;gt;&amp;gt;$LogFile 2&amp;gt;&amp;amp;1
        echo &amp;quot;[$NewFile]BackupSuccess!&amp;quot;&amp;gt;&amp;gt;$LogFile
        rm -rf $DumpFile
    ;;

    *)
        /etc/init.d/mysqldstop&amp;gt;/dev/null2&amp;gt;&amp;amp;1
        tar czvf $NewFile $DBPath$DBName&amp;gt;&amp;gt;$LogFile 2&amp;gt;&amp;amp;1
        /etc/init.d/mysqldstart&amp;gt;/dev/null2&amp;gt;&amp;amp;1
        echo &amp;quot;[$NewFile]BackupSuccess!&amp;quot;&amp;gt;&amp;gt;$LogFile
    ;;

    esac
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;fi
echo &amp;ldquo;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;-&amp;rdquo;&amp;gt;&amp;gt;$LogFile
{% endcodeblock %}&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>[转]Git-项目自动部署</title>
      <link>http://localhost:1313/archives/2014-10-17-xiang-mu-zi-dong-bu-shu-git/</link>
      <pubDate>Fri, 17 Oct 2014 13:29:00 +0800</pubDate>
      
      <guid>http://localhost:1313/archives/2014-10-17-xiang-mu-zi-dong-bu-shu-git/</guid>
      
        <description>&lt;p&gt;Git push后自动更新项目部署，&amp;rdquo;[deploy]&amp;ldquo;部署的分支为master。&lt;/p&gt;

&lt;p&gt;Gist
&lt;/br&gt;&lt;a href=&#34;https://gist.github.com/icyleaf/566767&#34;&gt;https://gist.github.com/icyleaf/566767&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;{% codeblock post-receive lang:ruby %}
#!/bin/sh
#&lt;/p&gt;

&lt;h1 id=&#34;git-autodeploy-script-when-it-matches-the-string-deploy&#34;&gt;git autodeploy script when it matches the string &amp;ldquo;[deploy]&amp;rdquo;&lt;/h1&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;h1 id=&#34;author-icyleaf-icyleaf-cn-gmail-com&#34;&gt;@author    icyleaf &lt;a href=&#34;mailto:icyleaf.cn@gmail.com&#34;&gt;icyleaf.cn@gmail.com&lt;/a&gt;&lt;/h1&gt;

&lt;h1 id=&#34;link-http-icyleaf-com&#34;&gt;@link      &lt;a href=&#34;http://icyleaf.com&#34;&gt;http://icyleaf.com&lt;/a&gt;&lt;/h1&gt;

&lt;h1 id=&#34;version-0-1&#34;&gt;@version   0.1&lt;/h1&gt;

&lt;p&gt;#&lt;/p&gt;

&lt;h1 id=&#34;usage&#34;&gt;Usage:&lt;/h1&gt;

&lt;h1 id=&#34;1-put-this-into-the-post-receive-hook-file-itself-below&#34;&gt;1. put this into the post-receive hook file itself below&lt;/h1&gt;

&lt;h1 id=&#34;2-chmod-x-post-recive&#34;&gt;2. &lt;code&gt;chmod +x post-recive&lt;/code&gt;&lt;/h1&gt;

&lt;h1 id=&#34;3-done&#34;&gt;3. Done!&lt;/h1&gt;

&lt;h1 id=&#34;check-the-remote-git-repository-whether-it-is-bare&#34;&gt;Check the remote git repository whether it is bare&lt;/h1&gt;

&lt;p&gt;IS_BARE=$(git rev-parse &amp;ndash;is-bare-repository)
if [ -z &amp;ldquo;$IS_BARE&amp;rdquo; ]; then
    echo &amp;gt;&amp;amp;2 &amp;ldquo;fatal: post-receive: IS_NOT_BARE&amp;rdquo;
    exit 1
fi&lt;/p&gt;

&lt;h1 id=&#34;get-the-latest-commit-subject&#34;&gt;Get the latest commit subject&lt;/h1&gt;

&lt;p&gt;SUBJECT=$(git log -1 &amp;ndash;pretty=format:&amp;ldquo;%s&amp;rdquo;)&lt;/p&gt;

&lt;h1 id=&#34;deploy-the-head-sources-to-publish&#34;&gt;Deploy the HEAD sources to publish&lt;/h1&gt;

&lt;p&gt;IS_PULL=$(echo &amp;ldquo;$SUBJECT&amp;rdquo; | grep &amp;ldquo;[deploy]&amp;rdquo;)
if [ -z &amp;ldquo;$IS_PULL&amp;rdquo; ]; then
    echo &amp;gt;&amp;amp;2 &amp;ldquo;tips: post-receive: IS_NOT_PULL&amp;rdquo;
    exit 1
fi&lt;/p&gt;

&lt;h1 id=&#34;check-the-deploy-dir-whether-it-exists&#34;&gt;Check the deploy dir whether it exists&lt;/h1&gt;

&lt;p&gt;DEPLOY_DIR=/home/icyleaf/php/icyleaf/
if [ ! -d $DEPLOY_DIR ] ; then
    echo &amp;gt;&amp;amp;2 &amp;ldquo;fatal: post-receive: DEPLOY_DIR_NOT_EXIST: \&amp;ldquo;$DEPLOY_DIR\&amp;ldquo;&amp;rdquo;
    exit 1
fi&lt;/p&gt;

&lt;h1 id=&#34;check-the-deploy-dir-whether-it-is-git-repository&#34;&gt;Check the deploy dir whether it is git repository&lt;/h1&gt;

&lt;p&gt;#
#IS_GIT=$(git rev-parse &amp;ndash;git-dir 2&amp;gt;/dev/null)
#if [ -z &amp;ldquo;$IS_GIT&amp;rdquo; ]; then&lt;/p&gt;

&lt;h1 id=&#34;echo-2-fatal-post-receive-is-not-git&#34;&gt;echo &amp;gt;&amp;amp;2 &amp;ldquo;fatal: post-receive: IS_NOT_GIT&amp;rdquo;&lt;/h1&gt;

&lt;h1 id=&#34;exit-1&#34;&gt;exit 1&lt;/h1&gt;

&lt;p&gt;#fi&lt;/p&gt;

&lt;h1 id=&#34;goto-the-deploy-dir-and-pull-the-latest-sources&#34;&gt;Goto the deploy dir and pull the latest sources&lt;/h1&gt;

&lt;p&gt;cd $DEPLOY_DIR
env -i git reset &amp;ndash;hard
env -i git pull
{% endcodeblock %}&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Redmine Plugins</title>
      <link>http://localhost:1313/archives/2014-04-15-redmine-plugins/</link>
      <pubDate>Tue, 15 Apr 2014 12:09:00 +0800</pubDate>
      
      <guid>http://localhost:1313/archives/2014-04-15-redmine-plugins/</guid>
      
        <description>&lt;p&gt;Git版本库工具-Gitolite
&lt;/br&gt;&lt;a href=&#34;https://github.com/CtrlC-Root/redmine-gitolite/&#34;&gt;https://github.com/CtrlC-Root/redmine-gitolite/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;知识积累工具-Knowledgebase
&lt;/br&gt;&lt;a href=&#34;https://github.com/alexbevi/redmine_knowledgebase/&#34;&gt;https://github.com/alexbevi/redmine_knowledgebase/&lt;/a&gt;&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>Mac安装配置MongoDB&#43;RockMongo</title>
      <link>http://localhost:1313/archives/2014-03-11-mac-mongodb-rockmongo/</link>
      <pubDate>Tue, 11 Mar 2014 18:00:00 +0800</pubDate>
      
      <guid>http://localhost:1313/archives/2014-03-11-mac-mongodb-rockmongo/</guid>
      
        <description>&lt;p&gt;MongoDB安装
&lt;/br&gt;使用brew安装很方便
&lt;/br&gt;&lt;a href=&#34;http://docs.mongodb.org/manual/tutorial/install-mongodb-on-os-x/&#34;&gt;http://docs.mongodb.org/manual/tutorial/install-mongodb-on-os-x/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;安装完成后可以选择修改配置文件
{% codeblock mongod.conf lang:ruby %}
#dbpath,logpath,bind_ip
vi /usr/local/etc/mongod.conf&lt;/p&gt;

&lt;p&gt;{% endcodeblock %}
&lt;/p&gt;

&lt;p&gt;启动配置
{% codeblock 启动配置 lang:ruby %}
#为了方便使用配置.bash_profile
vi ~/.bash_profile&lt;/p&gt;

&lt;p&gt;#添加以下内容
export PATH=$PATH:/usr/local/opt/mongodb/bin
alias mongodb_start=&amp;lsquo;sudo launchctl load -w /usr/local/Cellar/mongodb/2.4.9/homebrew.mxcl.mongodb.plist&amp;rsquo;
alias mongodb_stop=&amp;lsquo;sudo launchctl unload -w /usr/local/Cellar/mongodb/2.4.9/homebrew.mxcl.mongodb.plist&amp;rsquo;
alias mongodb_restart=&amp;lsquo;mongodb_stop; mongodb_start;&amp;rsquo;&lt;/p&gt;

&lt;p&gt;#这样直接使用mongodb_start,mongodb_stop,mongodb_restart很方便&lt;/p&gt;

&lt;p&gt;#启动
mongodb_start&lt;/p&gt;

&lt;p&gt;#配置用户名密码
mongo
db show
use test
db.addUser(&amp;ldquo;root&amp;rdquo;, &amp;ldquo;123456&amp;rdquo;)&lt;/p&gt;

&lt;p&gt;#重启
mongodb_restart
{% endcodeblock %}&lt;/p&gt;

&lt;p&gt;管理工具RockMongo，下载后根据自己的PHP环境配置
&lt;/br&gt;&lt;a href=&#34;http://rockmongo.com/downloads&#34;&gt;http://rockmongo.com/downloads&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;安装php-mongo
{% codeblock php-mongo lang:ruby %}
#我用的php54，记下安装后的路径
brew php54-mongo&lt;/p&gt;

&lt;p&gt;#配置php.ini
#添加或者修改extension=&amp;ldquo;mongo.so&amp;rdquo;
extension=&amp;ldquo;/usr/local/Cellar/php54-mongo/1.4.5/mongo.so&amp;rdquo;&lt;/p&gt;

&lt;p&gt;#启动/重启Php环境
{% endcodeblock %}&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>BAE Cache&amp;Redis实现ThinkPHP的Cache驱动</title>
      <link>http://localhost:1313/archives/2014-03-06-bae-redisshi-xian-thinkphpcache/</link>
      <pubDate>Thu, 06 Mar 2014 19:00:00 +0800</pubDate>
      
      <guid>http://localhost:1313/archives/2014-03-06-bae-redisshi-xian-thinkphpcache/</guid>
      
        <description>&lt;p&gt;在BAE环境下有单独的Cache，同时也有Redis，可以同时用来做不同的Cache服务，先从Redis开始&lt;/p&gt;

&lt;p&gt;1、Redis相关配置
{% codeblock conf.php lang:ruby %}
#BAE API Key与Secret Key
&amp;lsquo;BAE_AK&amp;rsquo;    =&amp;gt; &amp;lsquo;XXX&amp;rsquo;,
&amp;lsquo;BAE_SK&amp;rsquo;    =&amp;gt; &amp;lsquo;XXX&amp;rsquo;,&lt;/p&gt;

&lt;p&gt;#BAE Redis扩展配置
&amp;lsquo;BAE_REDIS_HOST&amp;rsquo;   =&amp;gt;   &amp;lsquo;redis.duapp.com&amp;rsquo;,
&amp;lsquo;BAE_REDIS_PORT&amp;rsquo;   =&amp;gt;   80,
&amp;lsquo;BAE_REDIS_DBNAME&amp;rsquo; =&amp;gt;   &amp;lsquo;XXX&amp;rsquo;,&lt;/p&gt;

&lt;p&gt;{% endcodeblock %}&lt;/p&gt;

&lt;p&gt;可以选择将Redis是否设为默认缓存，如果不是，使用时注意切换
{% codeblock 使用切换 lang:ruby %}
$cache = Cache::getInstance(&amp;lsquo;Baeredis&amp;rsquo;,array());
{% endcodeblock %}&lt;/p&gt;

&lt;p&gt;2、Redis Cache 驱动&lt;/p&gt;

&lt;p&gt;
{% codeblock CacheBaeredis.class.php lang:ruby %}
#根据CacheRedis.class.php修改&lt;/p&gt;

&lt;p&gt;&amp;lt;?php&lt;/p&gt;

&lt;p&gt;defined(&amp;lsquo;THINK_PATH&amp;rsquo;) or exit();&lt;/p&gt;

&lt;p&gt;class CacheBaeredis extends Cache {
     /**
     * 架构函数
     * @param array $options 缓存参数
     * @access public
     */
    public function __construct($options=array()) {
        if ( !extension_loaded(&amp;lsquo;redis&amp;rsquo;) ) {
            throw_exception(L(&amp;rsquo;_NOT&lt;em&gt;SUPPERT&lt;/em&gt;&amp;rsquo;).&amp;rsquo;:redis&amp;rsquo;);
        }
        if(empty($options)) {
            $options = array (
                &amp;lsquo;host&amp;rsquo;          =&amp;gt; C(&amp;lsquo;BAE_REDIS_HOST&amp;rsquo;) ? C(&amp;lsquo;BAE_REDIS_HOST&amp;rsquo;) : &amp;lsquo;127.0.0.1&amp;rsquo;,
                &amp;lsquo;port&amp;rsquo;          =&amp;gt; C(&amp;lsquo;BAE_REDIS_PORT&amp;rsquo;) ? C(&amp;lsquo;BAE_REDIS_PORT&amp;rsquo;) : 80,
                &amp;lsquo;timeout&amp;rsquo;       =&amp;gt; C(&amp;lsquo;DATA_CACHE_TIMEOUT&amp;rsquo;) ? C(&amp;lsquo;DATA_CACHE_TIMEOUT&amp;rsquo;) : false,
                &amp;lsquo;persistent&amp;rsquo;    =&amp;gt; false,
            );
        }
        $this-&amp;gt;options =  $options;
        $this-&amp;gt;options[&amp;lsquo;expire&amp;rsquo;] =  isset($options[&amp;lsquo;expire&amp;rsquo;])?  $options[&amp;lsquo;expire&amp;rsquo;]  :   C(&amp;lsquo;DATA_CACHE_TIME&amp;rsquo;);
        $this-&amp;gt;options[&amp;lsquo;prefix&amp;rsquo;] =  isset($options[&amp;lsquo;prefix&amp;rsquo;])?  $options[&amp;lsquo;prefix&amp;rsquo;]  :   C(&amp;lsquo;DATA_CACHE_PREFIX&amp;rsquo;);&lt;br /&gt;
        $this-&amp;gt;options[&amp;lsquo;length&amp;rsquo;] =  isset($options[&amp;lsquo;length&amp;rsquo;])?  $options[&amp;lsquo;length&amp;rsquo;]  :   0;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    try {
        /*建立连接后，在进行集合操作前，需要先进行auth验证*/
        $this-&amp;gt;handler = new Redis();
        $ret;
        if ($options[&#39;timeout&#39;] === false) {
            $ret = $this-&amp;gt;handler-&amp;gt;connect($options[&#39;host&#39;], $options[&#39;port&#39;]);
        }
        else {
            $ret = $this-&amp;gt;handler-&amp;gt;connect($options[&#39;host&#39;], $options[&#39;port&#39;], $options[&#39;timeout&#39;]);
        }

        if ($ret === false) {
            throw new RedisException($this-&amp;gt;handler-&amp;gt;getLastError());
        }

        $user = C(&#39;BAE_AK&#39;);
        $pwd = C(&#39;BAE_SK&#39;);
        $dbname = C(&#39;BAE_REDIS_DBNAME&#39;);

        $ret = $this-&amp;gt;handler-&amp;gt;auth($user . &amp;quot;-&amp;quot; . $pwd . &amp;quot;-&amp;quot; . $dbname);
        if ($ret === false) {
            throw new RedisException($this-&amp;gt;handler-&amp;gt;getLastError());
        }

    } catch (RedisException $e) {
        throw_exception(&#39;BAE Redis:&#39;.$e-&amp;gt;getMessage());
    }


}

/**
 * 读取缓存
 * @access public
 * @param string $name 缓存变量名
 * @return mixed
 */
public function get($name) {
    N(&#39;cache_read&#39;,1);
    $value = $this-&amp;gt;handler-&amp;gt;get($this-&amp;gt;options[&#39;prefix&#39;].$name);
    $jsonData  = json_decode( $value, true );
    return ($jsonData === NULL) ? $value : $jsonData;   //检测是否为JSON数据 true 返回JSON解析数组, false返回源数据
}

/**
 * 写入缓存
 * @access public
 * @param string $name 缓存变量名
 * @param mixed $value  存储数据
 * @param integer $expire  有效时间（秒）
 * @return boolen
 */
public function set($name, $value, $expire = null) {
    N(&#39;cache_write&#39;,1);
    if(is_null($expire)) {
        $expire  =  $this-&amp;gt;options[&#39;expire&#39;];
    }
    $name   =   $this-&amp;gt;options[&#39;prefix&#39;].$name;
    //对数组/对象数据进行缓存处理，保证数据完整性
    $value  =  (is_object($value) || is_array($value)) ? json_encode($value) : $value;

    //相对CacheRedis的驱动增加了expire&amp;gt;0的判断
    if(is_int($expire) &amp;amp; $expire &amp;gt; 0) {
        $result = $this-&amp;gt;handler-&amp;gt;setex($name, $expire, $value);
    }else{
        $result = $this-&amp;gt;handler-&amp;gt;set($name, $value);
    }
    if($result &amp;amp;&amp;amp; $this-&amp;gt;options[&#39;length&#39;]&amp;gt;0) {
        // 记录缓存队列
        $this-&amp;gt;queue($name);
    }
    return $result;
}

/**
 * 删除缓存
 * @access public
 * @param string $name 缓存变量名
 * @return boolen
 */
public function rm($name) {
    return $this-&amp;gt;handler-&amp;gt;delete($this-&amp;gt;options[&#39;prefix&#39;].$name);
}

/**
 * 清除缓存
 * @access public
 * @return boolen
 */
public function clear() {
    return $this-&amp;gt;handler-&amp;gt;flushDB();
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;}
{% endcodeblock %}&lt;/p&gt;

&lt;p&gt;3、BAE Cache驱动及配置&lt;/p&gt;

&lt;p&gt;{% codeblock 配置 lang:ruby %}&lt;/p&gt;

&lt;p&gt;#BAE API Key与Secret Key，前面已经有配置
&amp;lsquo;BAE_AK&amp;rsquo;    =&amp;gt; &amp;lsquo;XXX&amp;rsquo;,
&amp;lsquo;BAE_SK&amp;rsquo;    =&amp;gt; &amp;lsquo;XXX&amp;rsquo;,&lt;/p&gt;

&lt;p&gt;#设置自己的CacheID（资源名称）、Host和Port
&amp;lsquo;DATA_CACHE_TYPE&amp;rsquo;   =&amp;gt; &amp;lsquo;Bae&amp;rsquo;,       //设为默认
&amp;lsquo;DATA_CACHE_ID&amp;rsquo;     =&amp;gt;  &amp;lsquo;XXX&amp;rsquo;,
&amp;lsquo;MEMCACHE_HOST&amp;rsquo;     =&amp;gt;  &amp;lsquo;cache.duapp.com&amp;rsquo;,
&amp;lsquo;MEMCACHE_PORT&amp;rsquo;     =&amp;gt;  000,&lt;/p&gt;

&lt;p&gt;#require_once(BAE_API_ROOT_PATH . &amp;lsquo;BaeMemcache.class.php&amp;rsquo;);
#需要BAE相关的驱动文件，可以在index.php入口中添加Root Path方便使用，也可以自己修改定义
define(&amp;lsquo;BAE_API_ROOT_PATH&amp;rsquo;, &amp;lsquo;你的BAE驱动文件路径&amp;rsquo;);&lt;/p&gt;

&lt;p&gt;{% endcodeblock %}&lt;/p&gt;

&lt;p&gt;{% codeblock CacheBae.class.php lang:ruby %}&lt;/p&gt;

&lt;p&gt;&amp;lt;?php
class CacheBae extends Cache {&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;static $_cache;
private $_handler;

/**
 +----------------------------------------------------------
 * 架构函数
 +----------------------------------------------------------
 * @access public
 +----------------------------------------------------------
 */
public function __construct($options=&#39;&#39;) {
    if(!empty($options)) {
        $this-&amp;gt;options =  $options;
    }
    $this-&amp;gt;options[&#39;expire&#39;] = isset($options[&#39;expire&#39;])?$options[&#39;expire&#39;]:C(&#39;DATA_CACHE_TIME&#39;);
    $this-&amp;gt;options[&#39;length&#39;]  =  isset($options[&#39;length&#39;])?$options[&#39;length&#39;]:0;
    $this-&amp;gt;options[&#39;queque&#39;]  =  &#39;bae&#39;;
    $this-&amp;gt;init();
}

/**
 +----------------------------------------------------------
 * 初始化检查
 +----------------------------------------------------------
 * @access private
 +----------------------------------------------------------
 * @return boolen
 +----------------------------------------------------------
 */
private function init() {
    require_once(BAE_API_ROOT_PATH . &#39;BaeMemcache.class.php&#39;);
    /*Cache配置信息，可查询Cache详情页*/
    $cacheid = C(&#39;DATA_CACHE_ID&#39;);
    $host = C(&#39;MEMCACHE_HOST&#39;);
    $port = C(&#39;MEMCACHE_PORT&#39;);
    $user = C(&#39;BAE_AK&#39;);
    $pwd = C(&#39;BAE_SK&#39;);

    $this-&amp;gt;_handler = new BaeMemcache($cacheid,$host. &#39;: &#39;. $port, $user, $pwd);
    $this-&amp;gt;connected = true;
}

/**
 +----------------------------------------------------------
 * 是否连接
 +----------------------------------------------------------
 * @access public
 +----------------------------------------------------------
 * @return boolen
 +----------------------------------------------------------
 */
private function isConnected() {
    return $this-&amp;gt;connected;
}
/**
 +----------------------------------------------------------
 * 读取缓存
 +----------------------------------------------------------
 * @access public
 +----------------------------------------------------------
 * @param string $name 缓存变量名
 +----------------------------------------------------------
 * @return mixed
 +----------------------------------------------------------
 */
public function get($name) {
    N(&#39;cache_read&#39;,1);
$content = $this-&amp;gt;_handler-&amp;gt;get($name);
if(false !== $content ){
        if(C(&#39;DATA_CACHE_COMPRESS&#39;) &amp;amp;&amp;amp; function_exists(&#39;gzcompress&#39;)) {
    $content = substr($content,0,-1);  //remvoe \0 in the end
    }
        if(C(&#39;DATA_CACHE_CHECK&#39;)) {//开启数据校验
            $check  =  substr($content,0, 32);
            $content   =  substr($content,32);
            if($check != md5($content)) {//校验错误
                return false;
            }
        }
        if(C(&#39;DATA_CACHE_COMPRESS&#39;) &amp;amp;&amp;amp; function_exists(&#39;gzcompress&#39;)) {
            //启用数据压缩
            $content   =   gzuncompress($content);
        }
        $content    =   unserialize($content);
    return $content;
    }
    else {
        return false;
    }
}

/**
 +----------------------------------------------------------
 * 写入缓存
 +----------------------------------------------------------
 * @access public
 +----------------------------------------------------------
 * @param string $name 缓存变量名
 * @param mixed $value  存储数据
 * @param int $expire  有效时间 0为永久
 +----------------------------------------------------------
 * @return boolen
 +----------------------------------------------------------
 */
public function set($name,$value,$expire=null) {
    N(&#39;cache_write&#39;,1);
    if(is_null($expire)) {
        $expire =  $this-&amp;gt;options[&#39;expire&#39;];
    }
    $data   =   serialize($value);
    if( C(&#39;DATA_CACHE_COMPRESS&#39;) &amp;amp;&amp;amp; function_exists(&#39;gzcompress&#39;)) {
        //数据压缩
    //    $data   =   gzcompress($data,3);
      $data =  gzencode($data) . &amp;quot;\0&amp;quot;;
    }
    if(C(&#39;DATA_CACHE_CHECK&#39;)) {//开启数据校验
        $check  =  md5($data);
    }else {
        $check  =  &#39;&#39;;
    }
$data = $check.$data;
$result =  $this-&amp;gt;_handler-&amp;gt;set($name,$data,0,intval($expire));
    if($result) {
        if($this-&amp;gt;options[&#39;length&#39;]&amp;gt;0) {
            // 记录缓存队列
            $this-&amp;gt;queue($name);
        }
    return true;
    }else {
        return false;
    }
}

/**
 +----------------------------------------------------------
 * 删除缓存
 +----------------------------------------------------------
 * @access public
 +----------------------------------------------------------
 * @param string $name 缓存变量名
 +----------------------------------------------------------
 * @return boolen
 +----------------------------------------------------------
 */
public function rm($name) {
    return $this-&amp;gt;_handler-&amp;gt;delete($name);
}
static function queueSet($name,$value)
{
$h = new BaeMemcache();
if ( $h-&amp;gt;set($name,$value) ){
    self::$_cache = array($name =&amp;gt; $value);
}
}
static function queueGet($name)
{
if(isset(self::$_cache[$name]))
    return self::$_cache[$name];
$h = new BaeMemcache();
$r = $h-&amp;gt;get($name);
if ( false === $r ){
    return false;
}
self::$_cache[$name] = $r;
return $r;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;{% endcodeblock %}&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>WAMP&#43;ThinkPHP配置</title>
      <link>http://localhost:1313/archives/2014-03-05-wamppei-zhi/</link>
      <pubDate>Wed, 05 Mar 2014 18:30:00 +0800</pubDate>
      
      <guid>http://localhost:1313/archives/2014-03-05-wamppei-zhi/</guid>
      
        <description>&lt;p&gt;配置ThinkPHP开发环境
&lt;/br&gt;1、开启Rewrite支持.htaccess
&lt;/br&gt;2、自定义工程路径
&lt;/br&gt;3、自定义本地域名访问&lt;/p&gt;

&lt;p&gt;WAMP安装
&lt;/br&gt;&lt;a href=&#34;http://www.wampserver.com/en/#download-wrapper&#34;&gt;http://www.wampserver.com/en/#download-wrapper&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;{% codeblock 编辑wamp/bin/apache/Apache2.x.x/conf/httpd.conf lang:ruby %}&lt;/p&gt;

&lt;p&gt;#开启rewrite，支持.htaccess
#LoadModule rewrite_module modules/mod_rewrite.so去掉注释
LoadModule rewrite_module modules/mod_rewrite.so&lt;/p&gt;

&lt;p&gt;#开启httpd-vhosts，自定义域名和工程路径
#Include conf/extra/httpd-vhosts.conf去掉注释
Include conf/extra/httpd-vhosts.conf&lt;/p&gt;

&lt;p&gt;{% endcodeblock %}
&lt;/p&gt;

&lt;p&gt;自定义本地域名和工程路径
{% codeblock 编辑wamp/bin/apache/Apache2.x.x/conf/extra/httpd-vhosts.conf lang:ruby %}&lt;/p&gt;

&lt;p&gt;#自定义工程路径
#d:projectpath工程路径
#mylocalhost.com自定义域名
#注意AllowOverride 是All，与wamp主界面不同
#可以定义其他端口
&lt;VirtualHost *:80&gt;&lt;br /&gt;
  DocumentRoot d:projectpath
  ServerName myhost.com
  &lt;Directory &#34;d:projectpath&#34;&gt;
      Options Indexes FollowSymLinks
      AllowOverride All
      Order allow,deny
      Allow from all
  &lt;/Directory&gt;
&lt;/VirtualHost&gt;&lt;/p&gt;

&lt;p&gt;#添加wamp主界面，假设wamp安装在D盘
&lt;VirtualHost *:80&gt;&lt;br /&gt;
  DocumentRoot d:wamp/www
  ServerName wamp.com
  &lt;Directory &#34;d:wamp/www&#34;&gt;
      Options Indexes FollowSymLinks
      AllowOverride None
      Order allow,deny
      Allow from all
  &lt;/Directory&gt;
&lt;/VirtualHost&gt;&lt;/p&gt;

&lt;p&gt;{% endcodeblock %}&lt;/p&gt;

&lt;p&gt;去掉URL中的index.php
{% codeblock .htaccess lang:ruby %}&lt;/p&gt;

&lt;p&gt;&lt;IfModule mod_rewrite.c&gt;
RewriteEngine on
RewriteCond %{SCRIPT_FILENAME} !-f
RewriteCond %{SCRIPT_FILENAME} !-d
RewriteRule ^(.*)$ index.php/$1 [QAS,PT,L]
&lt;/IfModule&gt;&lt;/p&gt;

&lt;p&gt;{% endcodeblock %}&lt;/p&gt;

&lt;p&gt;{% codeblock 修改系统hosts lang:ruby %}&lt;/p&gt;

&lt;p&gt;127.0.0.1   myhost.com
127.0.0.1   wamp.com&lt;/p&gt;

&lt;p&gt;{% endcodeblock %}&lt;/p&gt;

&lt;p&gt;重启Apache&lt;/p&gt;

&lt;p&gt;查看成果吧
&lt;/br&gt;myhost.com
&lt;/br&gt;wamp.com&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>MySql:优化工具</title>
      <link>http://localhost:1313/archives/2013-11-07-mysql-you-hua-gong-ju/</link>
      <pubDate>Thu, 07 Nov 2013 18:36:00 +0800</pubDate>
      
      <guid>http://localhost:1313/archives/2013-11-07-mysql-you-hua-gong-ju/</guid>
      
        <description>&lt;p&gt;脚本优化tuning-primer.sh
{% codeblock lang:ruby %}
#cd /etc/   (my.conf所在目录)
#wget &lt;a href=&#34;http://www.day32.com/MySQL/tuning-primer.sh&#34;&gt;http://www.day32.com/MySQL/tuning-primer.sh&lt;/a&gt;
#chmod +x tuning-primer.sh
#./tuning-primer.sh
{% endcodeblock %}&lt;/p&gt;

&lt;p&gt;优化工具Mysqltuner
{% codeblock lang:ruby %}
安装：
#yum install -y mysqltuner
运行：
#mysqltuner
{% endcodeblock %}&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>日志统计分析-Shell/Goaccess</title>
      <link>http://localhost:1313/archives/2013-11-07-ri-zhi-tong-ji-fen-xi-shell-slash-goaccess/</link>
      <pubDate>Thu, 07 Nov 2013 18:36:00 +0800</pubDate>
      
      <guid>http://localhost:1313/archives/2013-11-07-ri-zhi-tong-ji-fen-xi-shell-slash-goaccess/</guid>
      
        <description>&lt;p&gt;对Nginx或其他日志进行简单的统计分析&lt;/p&gt;

&lt;p&gt;Shell
对某一列进行统计，可以分析Status Code,URL等
{% codeblock lang:ruby %}
#cat access.log | awk &amp;lsquo;{print $9}&amp;rsquo;|sort|uniq -c | sort -r -n &amp;gt; stat.log
或
#cat access.log |grep &amp;ldquo;200&amp;rdquo; | awk &amp;lsquo;{print $7}&amp;rsquo;|sort|uniq -c | sort -r -n &amp;gt; stat.log
#vi stat.log
{% endcodeblock %}&lt;/p&gt;

&lt;p&gt;指定String统计
{% codeblock lang:ruby %}
#cat access.log|grep &amp;ldquo;200&amp;rdquo;|wc -l
#cat access.log|grep &amp;ldquo;www.localhost.com&amp;rdquo;|wc -l
{% endcodeblock %}&lt;/p&gt;

&lt;p&gt;Goaccess工具
&lt;a href=&#34;http://goaccess.io/&#34;&gt;http://goaccess.io/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;{% codeblock lang:ruby %}
#goaccess -f access.log
#goaccess -f access.log -a -s -b
{% endcodeblock %}&lt;/p&gt;

&lt;p&gt;Goaccess分析压缩日志
{% codeblock lang:ruby %}
#zcat access.log-20130123.gz | goaccess
{% endcodeblock %}&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>SVN:使用</title>
      <link>http://localhost:1313/archives/2013-11-07-svnshi-yong/</link>
      <pubDate>Thu, 07 Nov 2013 18:15:00 +0800</pubDate>
      
      <guid>http://localhost:1313/archives/2013-11-07-svnshi-yong/</guid>
      
        <description>&lt;p&gt;1.系统
&lt;/br&gt;Centos 6.4&lt;/p&gt;

&lt;p&gt;2.安装svn
{% codeblock lang:ruby %}
#yum install subversion
{% endcodeblock %}
3.建立版本库
{% codeblock lang:ruby %}
#mkdir /mnt/svndata
{% endcodeblock %}
启动服务
{% codeblock lang:ruby %}
#svnserve -d -r /mnt/svndata
#svnadmin create /mnt/svndata/svn
{% endcodeblock %}
4.修改配置
{% codeblock lang:ruby %}
#cd /mnt/svndata/svn/conf
#vi svnserve.conf
anon-access=none
auth-access=write
password-db=passwd&lt;/p&gt;

&lt;p&gt;#vi passwd
[users]
hobo=123456
{% endcodeblock %}
&lt;br /&gt;
5.实现SVN与WEB同步&lt;/p&gt;

&lt;p&gt;1)checkout一个test项目
{% codeblock lang:ruby %}
#svn co svn://localhost/svn /mnt/www/webroot/test
{% endcodeblock %}
2)修改权限为WEB用户
{% codeblock lang:ruby %}
#chown -R apache:apache /mnt/www/webroot/test
{% endcodeblock %}
3)建立同步脚本
{% codeblock lang:ruby %}
#cd /mnt/svndata/svn/hooks/
#cp post-commit.tmpl post-commit
{% endcodeblock %}
4)编辑post-commit，添加同步脚本
{% codeblock lang:ruby %}
#vi post-commit
export LANG=en_US.UTF-8
SVN=/usr/bin/svn
WEB_TEST=/mnt/www/webroot/test
$SVN update $WEB_TEST –username hobo –password 123456
chown -R apache:apache $WEB
{% endcodeblock %}
5)增加脚本执行权限
{% codeblock lang:ruby %}
#chmod +x post-commit
{% endcodeblock %}&lt;/p&gt;

&lt;p&gt;Mac下Versions中.a包无法上传问题
{% codeblock lang:ruby %}
cd filepath
svn add libMobClickLibrary.a
{% endcodeblock %}&lt;/p&gt;

&lt;p&gt;删除版本控制 / 删除多级.svn文件
{% codeblock lang:ruby %}
#find . -type d -name &amp;ldquo;.svn&amp;rdquo;|xargs rm -rf;
{% endcodeblock %}&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>MySQL:常用命令行</title>
      <link>http://localhost:1313/archives/2013-10-30-mysql-chang-yong-ming-ling-xing/</link>
      <pubDate>Wed, 30 Oct 2013 08:58:00 +0800</pubDate>
      
      <guid>http://localhost:1313/archives/2013-10-30-mysql-chang-yong-ming-ling-xing/</guid>
      
        <description>&lt;p&gt;登入
&lt;/br&gt;mysql -h192.168.1.110  -uroot -ppassword&lt;/p&gt;

&lt;p&gt;登出
&lt;/br&gt;quit/exit&lt;/p&gt;

&lt;p&gt;查看数据库
&lt;/br&gt;show databases;&lt;/p&gt;

&lt;p&gt;用户权限
&lt;/br&gt;添加
&lt;/br&gt;grant select on db.table to &amp;lsquo;user&amp;rsquo;@&amp;lsquo;host&amp;rsquo;;
&lt;/br&gt;grant select,update on &lt;em&gt;.&lt;/em&gt; to &amp;lsquo;test&amp;rsquo;@&amp;lsquo;%&amp;rsquo;;
&lt;/br&gt;撤销
&lt;/br&gt;revoke all on &lt;em&gt;.&lt;/em&gt; from &amp;lsquo;test&amp;rsquo;@&amp;lsquo;%&amp;rsquo;;
&lt;/br&gt;查看
&lt;/br&gt;show grants;
&lt;/br&gt;show grants for user@localhost&lt;/p&gt;

&lt;p&gt;删除用户
&lt;/br&gt;delete from mysql.user where user=&amp;rdquo; and host=&amp;ldquo;;&lt;/p&gt;

&lt;p&gt;设置密码
&lt;/br&gt;update mysql.user set password=PASSWORD(&amp;lsquo;123456&amp;rsquo;) where user=&amp;lsquo;root&amp;rsquo;;&lt;/p&gt;

&lt;p&gt;配置远程连接
&lt;/br&gt;GRANT ALL PRIVILEGES ON &lt;em&gt;.&lt;/em&gt; TO &amp;lsquo;root&amp;rsquo;@&amp;lsquo;%&amp;rsquo; IDENTIFIED BY &amp;lsquo;password&amp;rsquo; WITH GRANT OPTION;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;导出&lt;br /&gt;
&lt;/br&gt;mysqldump -u　用户名 -p 数据库名 &amp;gt; 数据库名.sql
{% codeblock lang:ruby %}
mysqldump -u　root -p dbname &amp;gt; filepath.sql&lt;br /&gt;
#To export tofile(data only)
mysqldump -u [user]-p[pass]&amp;ndash;no-create-db &amp;ndash;no-create-info mydb &amp;gt; mydb.sql
#To export tofile(structure only)
mysqldump -u [user]-p[pass]&amp;ndash;no-data mydb &amp;gt; mydb.sql
#To import todatabase
mysql -u [user]-p[pass] mydb &amp;lt; mydb.sql
{% endcodeblock %}&lt;/p&gt;

&lt;p&gt;导入
{% codeblock lang:ruby %}
mysql&amp;gt; use dbname             #切到要导入的数据库
mysql&amp;gt; source filepath.sql
{% endcodeblock %}&lt;/p&gt;

&lt;p&gt;变量查看/修改
{% codeblock lang:ruby %}
show variables like &amp;lsquo;%slow%&amp;rsquo;;
set global slow_query_log= &amp;lsquo;ON&amp;rsquo;;&lt;/p&gt;

&lt;p&gt;show status like &amp;lsquo;Qca%&amp;rsquo;;&lt;/p&gt;

&lt;p&gt;#查看SQL中select条数
show status like &amp;lsquo;Com_sel%&amp;lsquo;; #显示的是一次会话的值！
show global status like &amp;ldquo;Com_select&amp;rdquo;;
{% endcodeblock %}&lt;/p&gt;

&lt;p&gt;找回密码？
&lt;/br&gt;1、kill -TERM mysqld
&lt;/br&gt;2、conf中加入skip-grant-tables
&lt;/br&gt;3、service mysqld restart
&lt;/br&gt;4、mysql -uroot -p
&lt;/br&gt;5、修改密码
&lt;/br&gt;6、改回原配置并重启&lt;/p&gt;

&lt;p&gt;Binlog：&lt;a href=&#34;http://dev.mysql.com/doc/refman/5.7/en/mysqlbinlog.html&#34;&gt;http://dev.mysql.com/doc/refman/5.7/en/mysqlbinlog.html&lt;/a&gt;
&lt;/br&gt;删除mysql-bin日志
&lt;/br&gt;&lt;a href=&#34;http://dev.mysql.com/doc/refman/5.7/en/purge-binary-logs.html&#34;&gt;http://dev.mysql.com/doc/refman/5.7/en/purge-binary-logs.html&lt;/a&gt;
&lt;/br&gt;PURGE BINARY LOGS TO &amp;lsquo;mysql-bin.010&amp;rsquo;;
&lt;/br&gt;PURGE BINARY LOGS BEFORE &amp;lsquo;2008-04-02 22:46:26&amp;rsquo;;&lt;/p&gt;

&lt;p&gt;清空表并使自增归0
&lt;/br&gt;TRUNCATE TABLE tablename&lt;/p&gt;

&lt;p&gt;Mac无法登陆
&lt;/br&gt;Can&amp;rsquo;t connect to MySQL server on &amp;lsquo;127.0.0.1&amp;rsquo; (61)
&lt;/br&gt;StevenMacBookAir:~ Hobo$ sudo su -
&lt;/br&gt;StevenMacBookAir:~ root# nohup /usr/local/mysql/bin/mysqld_safe &amp;amp;
&lt;/br&gt;[1] 464
&lt;/br&gt;StevenMacBookAir:~ root# appending output to nohup.out
&lt;/br&gt;exit
&lt;/br&gt;logout
&lt;/br&gt;StevenMacBookAir:~ Hobo$&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Go-Revel:Gorp连接MySQL</title>
      <link>http://localhost:1313/archives/2013-08-24-go-revel-gorplian-jie-mysql/</link>
      <pubDate>Sat, 24 Aug 2013 09:22:00 +0800</pubDate>
      
      <guid>http://localhost:1313/archives/2013-08-24-go-revel-gorplian-jie-mysql/</guid>
      
        <description>&lt;p&gt;Revel连接数据库可以参考官方的Booking示例&lt;/p&gt;

&lt;p&gt;除了Revel需要Gorp和MySQL驱动两个库
{% codeblock lang:ruby %}
#Gorp
go get github.com/coopernurse/gorp&lt;/p&gt;

&lt;p&gt;#MySQL驱动
go get github.com/go-sql-driver/mysql  #也可以用其他的驱动库
{% endcodeblock %}&lt;/p&gt;

&lt;p&gt;创建一个新的Revel工程app_name&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;配置conf/app.conf
{% codeblock 数据库配置 lang:ruby %}&lt;/p&gt;

&lt;h1 id=&#34;db-username-tcp-yourhost-port-dbname&#34;&gt;DB username:@tcp(yourhost:port)/dbname&lt;/h1&gt;

&lt;p&gt;db.import = github.com/Go-SQL-Driver/mysql
db.driver = mysql
db.spec   = root:@tcp(localhost:3306)/db_name
{% endcodeblock %}&lt;/p&gt;

&lt;p&gt;创建models/user.go，先只定义几个测试字段
{% codeblock user.go lang:ruby %}
package models&lt;/p&gt;

&lt;p&gt;type Post struct {
    UserId                          int
    Name                string
}
{% endcodeblock %}&lt;/p&gt;

&lt;p&gt;创建controllers/init.go
{% codeblock init.go lang:ruby %}
package controllers&lt;/p&gt;

&lt;p&gt;import &amp;ldquo;github.com/robfig/revel&amp;rdquo;&lt;/p&gt;

&lt;p&gt;func init() {
    revel.OnAppStart(Init)
    revel.InterceptMethod((*GorpController).Begin, revel.BEFORE)
    revel.InterceptMethod((*GorpController).Commit, revel.AFTER)
    revel.InterceptMethod((*GorpController).Rollback, revel.FINALLY)
}
{% endcodeblock %}&lt;/p&gt;

&lt;p&gt;创建controllers/gorp.go
{% codeblock gorp.go lang:ruby %}
package controllers&lt;/p&gt;

&lt;p&gt;import (
    &amp;ldquo;database/sql&amp;rdquo;
    &amp;ldquo;github.com/coopernurse/gorp&amp;rdquo;
    _ &amp;ldquo;github.com/Go-SQL-Driver/mysql&amp;rdquo;
    r &amp;ldquo;github.com/robfig/revel&amp;rdquo;
    &amp;ldquo;github.com/robfig/revel/modules/db/app&amp;rdquo;
    &amp;ldquo;app_name/app/models&amp;rdquo;
)&lt;/p&gt;

&lt;p&gt;var (
    Dbm *gorp.DbMap
)&lt;/p&gt;

&lt;p&gt;func Init() {
    db.Init()
    //MySQL InnoDB UTF8
    Dbm = &amp;amp;gorp.DbMap{Db: db.Db, Dialect: gorp.MySQLDialect{&amp;ldquo;InnoDB&amp;rdquo;, &amp;ldquo;UTF8&amp;rdquo;}}&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;setColumnSizes := func(t *gorp.TableMap, colSizes map[string]int) {
    for col, size := range colSizes {
        t.ColMap(col).MaxSize = size
    }
}

//创建一个User测试表
t := Dbm.AddTable(models.User{}).SetKeys(true, &amp;quot;UserId&amp;quot;)
setColumnSizes(t, map[string]int{
    &amp;quot;Name&amp;quot;: 20,
})

Dbm.TraceOn(&amp;quot;[gorp]&amp;quot;, r.INFO)
Dbm.CreateTables()

//插入一组测试数据
demoUser := &amp;amp;models.User{0, &amp;quot;Hobo&amp;quot;}
if err := Dbm.Insert(demoUser); err != nil {
    panic(err)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;type GorpController struct {
    *r.Controller
    Txn *gorp.Transaction
}&lt;/p&gt;

&lt;p&gt;func (c *GorpController) Begin() r.Result {
    txn, err := Dbm.Begin()
    if err != nil {
        panic(err)
    }
    c.Txn = txn
    return nil
}&lt;/p&gt;

&lt;p&gt;func (c *GorpController) Commit() r.Result {
    if c.Txn == nil {
        return nil
    }
    if err := c.Txn.Commit(); err != nil &amp;amp;&amp;amp; err != sql.ErrTxDone {
        panic(err)
    }
    c.Txn = nil
    return nil
}&lt;/p&gt;

&lt;p&gt;func (c *GorpController) Rollback() r.Result {
    if c.Txn == nil {
        return nil
    }
    if err := c.Txn.Rollback(); err != nil &amp;amp;&amp;amp; err != sql.ErrTxDone {
        panic(err)
    }
    c.Txn = nil
    return nil
}&lt;/p&gt;

&lt;p&gt;{% endcodeblock %}&lt;/p&gt;

&lt;p&gt;修改controllers/app.go
{% codeblock 修改app.go lang:ruby %}
#import添加
    &amp;ldquo;app_name/app/models&amp;rdquo;&lt;/p&gt;

&lt;p&gt;#包含GorpController
type App struct {
    GorpController
}&lt;/p&gt;

&lt;p&gt;#测试查询
func (c App) Index() revel.Result {
    greeting := &amp;ldquo;It works!&amp;rdquo;&lt;/p&gt;

&lt;p&gt;users, err := c.Txn.Select(models.User{}, &lt;code&gt;select * from user where Name=&amp;quot;Hobo&amp;quot;&lt;/code&gt;)
  if len(users) == 0 {
    greeting = &amp;ldquo;Null&amp;rdquo;
  } else {
    user := users[0].(*models.User)
    greeting = user.Name
  }
  if err != nil {
    panic(err)
  }
    return c.Render(greeting)
}&lt;/p&gt;

&lt;p&gt;{% endcodeblock %}&lt;/p&gt;

&lt;p&gt;修改views/App/Index.html
{% codeblock lang:ruby %}
#&lt;h1&gt;It works&lt;/h1&gt;
&lt;h1&gt;/{/{.greeting/}/}&lt;/h1&gt;      #去掉反斜杠
{% endcodeblock %}&lt;/p&gt;

&lt;p&gt;运行测试下
{% codeblock lang:ruby %}
go run app_name
{% endcodeblock %}&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Go-Revel:开发环境</title>
      <link>http://localhost:1313/archives/2013-08-20-go-revel-kai-fa-huan-jing/</link>
      <pubDate>Tue, 20 Aug 2013 16:38:00 +0800</pubDate>
      
      <guid>http://localhost:1313/archives/2013-08-20-go-revel-kai-fa-huan-jing/</guid>
      
        <description>&lt;p&gt;环境安装都直接看官方文档最靠谱，经他人加工后的经常容易误导，后面也会有一些安装体会分享&lt;/p&gt;

&lt;p&gt;Go&lt;br&gt;
英文&lt;a href=&#34;http://golang.org/doc/install#osx&#34;&gt;http://golang.org/doc/install#osx&lt;/a&gt; （墙）&lt;br&gt;
中文&lt;a href=&#34;http://zh.golanger.com/doc/install#osx&#34;&gt;http://zh.golanger.com/doc/install#osx&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Revel&lt;br&gt;
&lt;a href=&#34;http://robfig.github.io/revel/tutorial/gettingstarted.html&#34;&gt;http://robfig.github.io/revel/tutorial/gettingstarted.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;Revel配置过程中GOPATH和Revel command的配置可以直接编辑.bash_profile，个人感觉这样更简单直接
{% codeblock 编辑.bash_profile lang:ruby %}
$ vi ~/.bash_profile
{% endcodeblock %}
{% codeblock lang:ruby %}
#添加两行
export GOPATH=gocode_path           #gocode_path自己的工作目录
export PATH=$PATH:$GOPATH/bin       #PATH可能原来也有其他的配置，继续追加就行，&amp;rdquo;:&amp;ldquo;分割&lt;/p&gt;

&lt;p&gt;#编辑完成，重启终端
{% endcodeblock %}&lt;/p&gt;

&lt;p&gt;开发工具我还是喜欢Sublime Text 2，LiteIDE也试过，感觉一般&lt;br&gt;
&lt;a href=&#34;http://www.sublimetext.com/&#34;&gt;http://www.sublimetext.com/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;再推荐个Mac小工具Go2Shell，安装后添加到Finder的工具栏上，直接在当前目录下启动终端，没用过的同学可以装下，很方便&lt;br&gt;
&lt;a href=&#34;https://itunes.apple.com/cn/app/go2shell/id445770608?mt=12&#34;&gt;https://itunes.apple.com/cn/app/go2shell/id445770608?mt=12&lt;/a&gt;&lt;/p&gt;</description>
      
    </item>
    
    <item>
      <title>Octopress 使用</title>
      <link>http://localhost:1313/archives/2013-08-19-octopress-shiyong/</link>
      <pubDate>Mon, 19 Aug 2013 18:39:00 +0800</pubDate>
      
      <guid>http://localhost:1313/archives/2013-08-19-octopress-shiyong/</guid>
      
        <description>

&lt;p&gt;{% codeblock Git command lang:ruby %}
git add .
git commit -m &amp;lsquo;update&amp;rsquo;
git push origin master
{% endcodeblock %}&lt;/p&gt;

&lt;p&gt;{% codeblock Rake command lang:objc %}
#预览
rake preview
#发布
rake generate
rake deploy&lt;/p&gt;

&lt;p&gt;#创建文章
rake new_post[&amp;ldquo;title&amp;rdquo;]&lt;/p&gt;

&lt;p&gt;rake new_page[super-awesome]&lt;/p&gt;

&lt;h1 id=&#34;creates-source-super-awesome-index-markdown&#34;&gt;creates /source/super-awesome/index.markdown&lt;/h1&gt;

&lt;p&gt;rake new_page[super-awesome/page.html]&lt;/p&gt;

&lt;h1 id=&#34;creates-source-super-awesome-page-html&#34;&gt;creates /source/super-awesome/page.html&lt;/h1&gt;

&lt;p&gt;{% endcodeblock %}&lt;/p&gt;
</description>
      
    </item>
    
  </channel>
</rss>